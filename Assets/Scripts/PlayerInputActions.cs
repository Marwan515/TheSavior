//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""PlayerActions"",
            ""id"": ""9eefc6c6-cf45-49d4-a1fc-7178f008c4c9"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""20acc9c6-3727-407f-8218-582dd5ed72f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""a4891d97-2fe2-42f4-8d97-c71363b9fdbd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LightAttacks"",
                    ""type"": ""Button"",
                    ""id"": ""3790cca1-b100-4e18-8f31-019382350b7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap,Hold(duration=0.5,pressPoint=0.7)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttacks"",
                    ""type"": ""Button"",
                    ""id"": ""708f4a8f-7575-4703-86f5-95fe8a23c7f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap,Hold(duration=0.5,pressPoint=0.7)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dodge"",
                    ""type"": ""Button"",
                    ""id"": ""910e9f0e-141d-499f-9bb2-c84f68103aa9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""e7c3b75e-44f4-4b9c-b9e3-5b6284ed06c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialAbilitiesLight"",
                    ""type"": ""Button"",
                    ""id"": ""4f299409-e79c-42b4-9160-cdbe8c8bc6d8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialAbilitiesHeavy"",
                    ""type"": ""Button"",
                    ""id"": ""8bba3570-3a20-47c6-89be-cd6cea1b3d89"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""7d351957-b592-4d13-893f-6844294ce425"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""40625fb5-141c-4069-bf91-846f3398228a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UtilityUse"",
                    ""type"": ""Button"",
                    ""id"": ""18130b3e-f700-4472-a81d-e1a2b1cc56a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CombatState"",
                    ""type"": ""Button"",
                    ""id"": ""5c5d14ca-4e3a-4a83-8de0-ee92e9fde0b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b23945f7-551c-46b6-9820-8000c17f36bc"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4388587-ad70-4827-bd91-18af530f23b9"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9947b84a-caf4-43eb-90ca-6e58cfc80895"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b48f7c22-b4a9-4fb5-8544-a6c4e4f93aa0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7a34812b-e446-497d-9368-64ff7542c656"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2c7e2f0f-ab9e-496f-a8be-5c113b3fa6e9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""49681fe6-6e35-45ce-b0c3-d6611b223379"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2039499e-e23c-4182-9fcf-57746ffe8bf7"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3529352-67a5-4851-8f8d-2eb07bc0d432"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttacks"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d27ddc2d-129a-4be6-825a-46d57a310369"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LightAttacks"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfa83170-c78f-4dd5-ad82-b6d3af7dacc6"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttacks"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b68fa215-47e8-4995-807b-57797a99bb4f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttacks"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""431125da-899d-4e2f-a5af-9ef89d5a7486"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eadcbdd1-8add-4453-ac36-4a35e8d5f881"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dodge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f06ab5df-2371-45a0-99b5-7985d669964d"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""19d14029-5f58-4efc-a57d-46fac5f4ecff"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d836b5c4-cffa-4790-9df2-46721be91641"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialAbilitiesLight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fda7a5d3-9981-44f8-a426-60e56a3baf6c"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialAbilitiesLight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f22cdf84-5b14-4cf8-a532-eca97d815b7d"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialAbilitiesHeavy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""537ae411-9759-4743-afb9-fa3a4b9784bc"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d95f691c-7cd1-48f0-aff4-906584917d93"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b55f13c-4b5b-43d4-8d99-8fed91078c7b"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a28fa2b-accd-4867-8dcf-784647d51d6d"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4026635-d810-46c8-9768-4224f13e831b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UtilityUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c5886ae-4cfa-4821-a56d-afc802d41f3b"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UtilityUse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""156bd021-fca9-4df1-a821-aeb8cbb7a503"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CombatState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c809fda9-eff1-4723-9910-a913894117c4"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CombatState"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerActions
        m_PlayerActions = asset.FindActionMap("PlayerActions", throwIfNotFound: true);
        m_PlayerActions_Jump = m_PlayerActions.FindAction("Jump", throwIfNotFound: true);
        m_PlayerActions_Movement = m_PlayerActions.FindAction("Movement", throwIfNotFound: true);
        m_PlayerActions_LightAttacks = m_PlayerActions.FindAction("LightAttacks", throwIfNotFound: true);
        m_PlayerActions_HeavyAttacks = m_PlayerActions.FindAction("HeavyAttacks", throwIfNotFound: true);
        m_PlayerActions_Dodge = m_PlayerActions.FindAction("Dodge", throwIfNotFound: true);
        m_PlayerActions_Sprint = m_PlayerActions.FindAction("Sprint", throwIfNotFound: true);
        m_PlayerActions_SpecialAbilitiesLight = m_PlayerActions.FindAction("SpecialAbilitiesLight", throwIfNotFound: true);
        m_PlayerActions_SpecialAbilitiesHeavy = m_PlayerActions.FindAction("SpecialAbilitiesHeavy", throwIfNotFound: true);
        m_PlayerActions_Interaction = m_PlayerActions.FindAction("Interaction", throwIfNotFound: true);
        m_PlayerActions_Crouch = m_PlayerActions.FindAction("Crouch", throwIfNotFound: true);
        m_PlayerActions_UtilityUse = m_PlayerActions.FindAction("UtilityUse", throwIfNotFound: true);
        m_PlayerActions_CombatState = m_PlayerActions.FindAction("CombatState", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerActions
    private readonly InputActionMap m_PlayerActions;
    private List<IPlayerActionsActions> m_PlayerActionsActionsCallbackInterfaces = new List<IPlayerActionsActions>();
    private readonly InputAction m_PlayerActions_Jump;
    private readonly InputAction m_PlayerActions_Movement;
    private readonly InputAction m_PlayerActions_LightAttacks;
    private readonly InputAction m_PlayerActions_HeavyAttacks;
    private readonly InputAction m_PlayerActions_Dodge;
    private readonly InputAction m_PlayerActions_Sprint;
    private readonly InputAction m_PlayerActions_SpecialAbilitiesLight;
    private readonly InputAction m_PlayerActions_SpecialAbilitiesHeavy;
    private readonly InputAction m_PlayerActions_Interaction;
    private readonly InputAction m_PlayerActions_Crouch;
    private readonly InputAction m_PlayerActions_UtilityUse;
    private readonly InputAction m_PlayerActions_CombatState;
    public struct PlayerActionsActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActionsActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_PlayerActions_Jump;
        public InputAction @Movement => m_Wrapper.m_PlayerActions_Movement;
        public InputAction @LightAttacks => m_Wrapper.m_PlayerActions_LightAttacks;
        public InputAction @HeavyAttacks => m_Wrapper.m_PlayerActions_HeavyAttacks;
        public InputAction @Dodge => m_Wrapper.m_PlayerActions_Dodge;
        public InputAction @Sprint => m_Wrapper.m_PlayerActions_Sprint;
        public InputAction @SpecialAbilitiesLight => m_Wrapper.m_PlayerActions_SpecialAbilitiesLight;
        public InputAction @SpecialAbilitiesHeavy => m_Wrapper.m_PlayerActions_SpecialAbilitiesHeavy;
        public InputAction @Interaction => m_Wrapper.m_PlayerActions_Interaction;
        public InputAction @Crouch => m_Wrapper.m_PlayerActions_Crouch;
        public InputAction @UtilityUse => m_Wrapper.m_PlayerActions_UtilityUse;
        public InputAction @CombatState => m_Wrapper.m_PlayerActions_CombatState;
        public InputActionMap Get() { return m_Wrapper.m_PlayerActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActionsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Add(instance);
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @LightAttacks.started += instance.OnLightAttacks;
            @LightAttacks.performed += instance.OnLightAttacks;
            @LightAttacks.canceled += instance.OnLightAttacks;
            @HeavyAttacks.started += instance.OnHeavyAttacks;
            @HeavyAttacks.performed += instance.OnHeavyAttacks;
            @HeavyAttacks.canceled += instance.OnHeavyAttacks;
            @Dodge.started += instance.OnDodge;
            @Dodge.performed += instance.OnDodge;
            @Dodge.canceled += instance.OnDodge;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @SpecialAbilitiesLight.started += instance.OnSpecialAbilitiesLight;
            @SpecialAbilitiesLight.performed += instance.OnSpecialAbilitiesLight;
            @SpecialAbilitiesLight.canceled += instance.OnSpecialAbilitiesLight;
            @SpecialAbilitiesHeavy.started += instance.OnSpecialAbilitiesHeavy;
            @SpecialAbilitiesHeavy.performed += instance.OnSpecialAbilitiesHeavy;
            @SpecialAbilitiesHeavy.canceled += instance.OnSpecialAbilitiesHeavy;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @Crouch.started += instance.OnCrouch;
            @Crouch.performed += instance.OnCrouch;
            @Crouch.canceled += instance.OnCrouch;
            @UtilityUse.started += instance.OnUtilityUse;
            @UtilityUse.performed += instance.OnUtilityUse;
            @UtilityUse.canceled += instance.OnUtilityUse;
            @CombatState.started += instance.OnCombatState;
            @CombatState.performed += instance.OnCombatState;
            @CombatState.canceled += instance.OnCombatState;
        }

        private void UnregisterCallbacks(IPlayerActionsActions instance)
        {
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @LightAttacks.started -= instance.OnLightAttacks;
            @LightAttacks.performed -= instance.OnLightAttacks;
            @LightAttacks.canceled -= instance.OnLightAttacks;
            @HeavyAttacks.started -= instance.OnHeavyAttacks;
            @HeavyAttacks.performed -= instance.OnHeavyAttacks;
            @HeavyAttacks.canceled -= instance.OnHeavyAttacks;
            @Dodge.started -= instance.OnDodge;
            @Dodge.performed -= instance.OnDodge;
            @Dodge.canceled -= instance.OnDodge;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @SpecialAbilitiesLight.started -= instance.OnSpecialAbilitiesLight;
            @SpecialAbilitiesLight.performed -= instance.OnSpecialAbilitiesLight;
            @SpecialAbilitiesLight.canceled -= instance.OnSpecialAbilitiesLight;
            @SpecialAbilitiesHeavy.started -= instance.OnSpecialAbilitiesHeavy;
            @SpecialAbilitiesHeavy.performed -= instance.OnSpecialAbilitiesHeavy;
            @SpecialAbilitiesHeavy.canceled -= instance.OnSpecialAbilitiesHeavy;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @Crouch.started -= instance.OnCrouch;
            @Crouch.performed -= instance.OnCrouch;
            @Crouch.canceled -= instance.OnCrouch;
            @UtilityUse.started -= instance.OnUtilityUse;
            @UtilityUse.performed -= instance.OnUtilityUse;
            @UtilityUse.canceled -= instance.OnUtilityUse;
            @CombatState.started -= instance.OnCombatState;
            @CombatState.performed -= instance.OnCombatState;
            @CombatState.canceled -= instance.OnCombatState;
        }

        public void RemoveCallbacks(IPlayerActionsActions instance)
        {
            if (m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActionsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActionsActions @PlayerActions => new PlayerActionsActions(this);
    public interface IPlayerActionsActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnLightAttacks(InputAction.CallbackContext context);
        void OnHeavyAttacks(InputAction.CallbackContext context);
        void OnDodge(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnSpecialAbilitiesLight(InputAction.CallbackContext context);
        void OnSpecialAbilitiesHeavy(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnUtilityUse(InputAction.CallbackContext context);
        void OnCombatState(InputAction.CallbackContext context);
    }
}
